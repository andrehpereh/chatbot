# PIPELINE DEFINITION
# Name: my-pipeline
components:
  comp-check-status:
    executorLabel: exec-check-status
    inputDefinitions:
      parameters:
        status:
          isOptional: true
          parameterType: TASK_FINAL_STATUS
  comp-deploy-model:
    executorLabel: exec-deploy-model
    inputDefinitions:
      parameters:
        model_path:
          parameterType: STRING
  comp-exit-handler-1: {}
  comp-preprocess-data:
    executorLabel: exec-preprocess-data
    inputDefinitions:
      parameters:
        data_path:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      parameters:
        data_path:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-check-status:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - check_status
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef check_status(status: PipelineTaskFinalStatus): # , recipient_email:\
          \ str\n    pipeline_failed = False\n\n    for task_name, task_status in\
          \ status.tasks.items():\n        if task_status.state != 'SUCCEEDED':\n\
          \            pipeline_failed = True\n            break\n\n    if pipeline_failed:\n\
          \        subject = \"Pipeline Failed\"\n        message = f\"Your pipeline\
          \ has failed. Error code: {status.error_code}\\nError message: {status.error_message}\"\
          \n    else:\n        subject = \"Pipeline Succeeded\"\n        message =\
          \ f\"Your pipeline has succeeded. Deployment details: ...\"  # Add details\
          \ if you deploy\n\n    # ... (Rest of the email sending logic as before)\n\
          \n"
        image: python:3.7
    exec-deploy-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - deploy_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef deploy_model(model_path: str):\n    # Placeholder for model deployment\
          \ logic\n    pass\n\n"
        image: python:3.7
    exec-preprocess-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - preprocess_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef preprocess_data(data_path: str) -> str:\n    # Placeholder for\
          \ data preprocessing logic\n    return \"processed_data.csv\" \n\n"
        image: python:3.7
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(data_path: str) -> str:\n    # Placeholder for model\
          \ training logic\n    return \"model.pkl\" \n\n"
        image: python:3.7
pipelineInfo:
  name: my-pipeline
root:
  dag:
    tasks:
      check-status:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-check-status
        dependentTasks:
        - exit-handler-1
        inputs:
          parameters:
            status:
              taskFinalStatus:
                producerTask: exit-handler-1
        taskInfo:
          name: check-status
        triggerPolicy:
          strategy: ALL_UPSTREAM_TASKS_COMPLETED
      deploy-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-deploy-model
        dependentTasks:
        - train-model
        inputs:
          parameters:
            model_path:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: train-model
        taskInfo:
          name: deploy-model
      exit-handler-1:
        componentRef:
          name: comp-exit-handler-1
        taskInfo:
          name: exit-handler-1
      preprocess-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-preprocess-data
        inputs:
          parameters:
            data_path:
              runtimeValue:
                constant: raw_data.csv
        taskInfo:
          name: preprocess-data
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - preprocess-data
        inputs:
          parameters:
            data_path:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: preprocess-data
        taskInfo:
          name: train-model
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
